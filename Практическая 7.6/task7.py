import random 


# Задача 7. Пропавшая карточка

# Что нужно сделать
# Для настольной игры используются карточки с номерами от 1 до N. 
# Одна карточка потерялась. Напишите программу, которая поможет найти потерянную карточку, если номера оставшихся известны. 
# Найдите её, зная номера оставшихся карточек.

# Введите число карточек — N.

# Затем введите N − 1 номера оставшихся карточек. Они могут быть введены в любом порядке.

# Пример:

# Введите количество карточек: 5
# Введите номер оставшейся карточки: 1
# Введите номер оставшейся карточки: 4
# Введите номер оставшейся карточки: 5
# Введите номер оставшейся карточки: 3
# Номер пропавшей карточки: 2
# Что оценивается
# Задание считается успешно выполненным, если:

# результат вывода соответствует условию;
# input содержат корректные приглашения для ввода;
# переменные имеют значащие имена, не только a, b, c, d.
# Что оценивается (общее)
# Использование именованных индексов, не просто i (видео 7.2).
# Ввод правильных чисел, без дополнительных действий со стороны пользователя, без использования +1 (видео 7.4).
# Правильно оформленный input, без пустого приветствия для ввода (видео 2.3).
# Переменные имеют значащие имена, не только a, b, c, d (видео 2.3).
# Пробелы после запятых, пробелы при бинарных операциях.
# Отсутствие пробелов после имён функций и перед скобками: print (), input () — неверно, print() — верно.
# Правильно оформлены блоки if-elif-else, отступы одинаковы во всех блоках одного уровня.
# Правильно:

# if a > 1:

#   b = 3

# else:

#   b = 5



# Неправильно:

# If a > 1:

#   b = 3

# else:

cards = int (input("Введите количество карточек: "))
number_of_cards = 1
summ_cards = 0
summ_remained = 0


for deck in range(1, cards + 1):
    summ_cards += deck   
    while cards > number_of_cards: 
        remained = int (input("Введите номер оставшийся карточки: "))
        summ_remained += remained
        number_of_cards += 1  

print("Номер пропавшей карты: ", summ_cards - summ_remained)

        
        
